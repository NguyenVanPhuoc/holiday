<?php
namespace App\Http\Controllers;
use Illuminate\Support\Facades\Auth;
use Illuminate\Http\Request;
use App\Http\Requests;
use App\User;
use App\Media;
use App\Tours;
use App\Schedules;
use App\Seo;
use App\Countries;
use App\CountryCategory;
use App\CategoryTour;
use App\Duration;
use App\Highlight;
use App\Overview;
use App\CountryBlog;
use Illuminate\Pagination\LengthAwarePaginator;
use Illuminate\Database\Eloquent\Collection;
use DB;
class TourController extends Controller
{
    /*public function countryTour($slug_country){
        $country = Countries::findBySlug($slug_country);
        if($slug_country == 'multi'){
            $regions = Countries::where('parent_id', $country->id)->get();
            $tours = Tours::whereRaw("find_in_set($country->id,country_id)")->paginate(8);
        }
        else{
            $regions = Countries::where('parent_id', $country->id)->get();
            //$tours = Tours::whereRaw("find_in_set($country->id,country_id)")->paginate(8);
            $tours = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->where('country_tours.country_id', $country->id)
                            ->distinct()->select('tours.*')->paginate(8);
        }
        
        $countryCat = CountryCategory::where('country_id', $country->id)->select('cat_id')->get();
        return view('tours.country_tour', ['country'=>$country, 'regions'=>$regions, 'tours'=>$tours, 'countryCat'=>$countryCat]);
    }*/

    public function countryTour($slug_country, Request $request){
        $country = getCountryOverviewBySlug($slug_country); 
        
        $array_country_id = getArrayIdChildOfCountry($country->id);
        $array_country_id[] = $country->id;
        $request['array_country_id'] = $array_country_id;

        $list_region = getListRegionInCountry($country->id);
        $list_tour_style = getListTourStyle();
        $list_duration = getListDuration();
        $list_tour = filterTour($request, 6, 1); 
        $list_tourStyle = getListTourStyleByCountry($country->id);
        $list_tourDuration = $country->countryTourDuration()->get();
        $list_thingToDo = getListPostGuideCountry('thing_to_do', $country->id, 4);
        $list_highlight = getListMainCityOfCountry($country->id, 4);
        $list_travelTip = getListPostGuideCountry('travel_tip', $country->id, 4);
        $list_ortherCountry = Countries::whereNotIn('id', [$country->id])->where('parent_id', 0)->get();
        $list_consultants = getConsultantsByCountry($country->id);

        //data send to blade view
        $data =[
            'country' => $country,
            'list_region' => $list_region,
            'list_tour_style' => $list_tour_style,
            'list_duration' => $list_duration,
            'list_tour' => $list_tour,
            'list_tourStyle' => $list_tourStyle,
            'list_tourDuration' => $list_tourDuration,
            'list_thingToDo' => $list_thingToDo,
            'list_highlight' => $list_highlight,
            'list_travelTip' => $list_travelTip,
            'list_ortherCountry' => $list_ortherCountry,
            'list_consultants' => $list_consultants,
        ];
        return view('tours.country_tour', $data);
    }

    /*public function tour($slug){
        $tour = Tours::findBySlug($slug);
        return view('tours.tour', ['tour'=>$tour]);
    }*/

    //multi country tour
    public function asiaTour(Request $request){
        $array_destinationID = (isset($request->destination_id) && $request->destination_id != '') ? explode(",", $request->destination_id) : []; 
        $duration_id = $request->duration_id;
        $array_catID = (isset($request->cat_id) && $request->cat_id != '') ? explode(",", $request->cat_id) : [];
        $request['array_country_id'] = $array_destinationID;
        $request['array_tourstyle_id'] = $array_catID;

        $list_destination = getAllMainCountry();
        $list_tour_style = getListTourStyle();
        $list_duration = getListDuration();
        $list_tour = filterTour($request, 6, 1);
        $list_consultants = getConsultantsByCountry(NULL, NULL);
        
        $data = [
            'list_destination' => $list_destination,
            'list_tour_style' => $list_tour_style,
            'list_duration' => $list_duration,
            'list_tour' => $list_tour,
            'list_consultants' => $list_consultants,
            'array_destinationID' => $array_destinationID,
            'duration_id' => $duration_id,
            'array_catID' => $array_catID,
        ];
        return view('tours.asia_tour', $data);
    }

    public function tour($slug_country, $slug){
        $tour = Tours::findBySlug($slug);
        $array_highlightID = ($tour->itinerary != '') ? explode(",", $tour->itinerary) : [];
        $array_country = get_country_of_tour($tour->id);
        $country = $array_country[0];
        $cate_ids = ($tour->cat_id != '') ? ($tour->cat_id) : FALSE;
        $cates = CategoryTour::select('title', 'image')->where('id', $cate_ids)->first();
        if($country) 
            $regions = Countries::where('parent_id', $country->id)->get();
        else
            $regions = Countries::where('parent_id', 0)->get();
        $list_schedule = Schedules::where('tour_id', $tour->id)->orderBy('created_at', 'asc')->get();
        $related_tours = Tours::whereRaw("find_in_set($country->id,country_id)")->paginate(20);
        $seo = get_seo($tour->id, 'tour');
        $list_travelTip = getListPostGuideCountry('travel_tip', $country->id, 4);
        $list_highlight = Highlight::whereIn('id', $array_highlightID)->get();
        $list_tour_byCountry= Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                                            ->where('country_tours.country_id', $country->id)
                                            ->distinct()->select('tours.*')
                                            ->get();
        $list_main_city = Overview::select('list_main_city')->where('country_id', $country->id)->first();
        $desc_tourCountry = CountryBlog::where('type', 'country_tour')->where('country_id', $country->id)->select('country_blogs.*')->first();

        $data = [
            'tour' => $tour, 
            'list_schedule' => $list_schedule, 
            'country' => $country, 
            'related_tours' => $related_tours, 
            'regions' => $regions,
            'seo' => $seo,
            'list_travelTip' => $list_travelTip,
            'list_highlight' => $list_highlight,
            'cates' => $cates,
            'list_tour_byCountry' => $list_tour_byCountry,
            'list_main_city' => $list_main_city,
            'desc_tourCountry' => $desc_tourCountry,
        ];
        return view('tours.tour', $data);
    }

    //filter by country
    public function toursMultiParamByCountry($slug_country, $region, $duration, $cat, $per_page, $page){

        $country = Countries::findBySlug($slug_country); 
        $region_select = $cat_select = array();

        //sb region
        $array_all_region =  Countries::where('parent_id', $country->id)->select('id')->get();
        $count_region = array();
        $query_region = array();

        //sb duration
        $array_all_duration = Duration::select('id')->get();
        $count_duration = array();
        $query_duration = array();

        //sb cat
        $array_all_cat = CategoryTour::select('id')->get(); 
        $count_cat = array();
        $query_cat = array();
        
        if($region != 'noindex') $region_select = explode('-and-', $region); //split string to array 
        if($cat != 'noindex') $cat_select = explode('-and-', $cat); //split string to array 
        if($per_page == 'noindex' || $per_page == '') $per_page = 8;
        if($page == 'noindex' || $page == '') $page = 1;

        if($slug_country == 'multi'){ //multi country
            $regions = Countries::where('parent_id', $country->id)->get();
            $tours = Tours::whereRaw("find_in_set($country->id,country_id)")->paginate($per_page);
        }
        else{ //single country
            $regions = Countries::where('parent_id', $country->id)->get(); 
            //$tours = Tours::whereRaw("find_in_set($country->id,country_id)")->paginate($per_page);
            $tours = Tours::query();

            foreach($array_all_region as $key => $value){ //query of list region
                $query_region[$key] = Tours::query(); 
            }
            foreach($array_all_duration as $key => $value){ //query of list duration
                $query_duration[$key] = Tours::query(); 
            }
            foreach($array_all_cat as $key => $value){ //query of list cat
                $query_cat[$key] = Tours::query(); 
            }

            $tours = $tours->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id');
            foreach($array_all_region as $key => $value){ //query of list region
                $query_region[$key] = $query_region[$key]->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id');
            }
            foreach($array_all_duration as $key => $value){ //query of list duration
                $query_duration[$key] = $query_duration[$key]->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id'); 
            }
            foreach($array_all_cat as $key => $value){ //query of list cat
                $query_cat[$key] = $query_cat[$key]->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id');
            }

            //filter by duration slug
            if($duration != 'noindex'){
                $tours = $tours->where('durations.slug', $duration);
                foreach($array_all_region as $key => $value){ //query of list region
                    $query_region[$key] = $query_region[$key]->where('durations.slug', $duration);
                }
                foreach($array_all_duration as $key => $value){ //query of list duration
                    $query_duration[$key] = $query_duration[$key]->where('durations.slug', $duration);
                }
                foreach($array_all_cat as $key => $value){ //query of list cat
                    $query_cat[$key] = $query_cat[$key]->where('durations.slug', $duration);
                }
            }
       
            $tours = $tours->orderBy('tours.created_at', 'desc')->select('tours.*')->distinct()->get(); 
            //current country
            if($country){
                /*$tours = $tours->intersect(
                            Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->where('country_tours.country_id', $country->id)
                            ->distinct()->select('tours.*')
                            ->get()
                        ); */
                $queryTemp = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->where('country_tours.country_id', $country->id)
                            ->distinct()->select('tours.*')
                            ->get();
                $tours = $tours->intersect($queryTemp);
                //dd($tours);
                /*$test = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')->where('country_tours.country_id', $country->id)->distinct()->select('tours.*')->get();
                dd($test);*/
            }
            if($region_select){ 
                $query_region_select = Tours::query();
                $query_region_select = $query_region_select->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')->distinct()->select('tours.*')->get();
                foreach($region_select as $region_slug){
                    $queryTemp = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                        ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                        ->join('durations', 'tours.duration_id', '=', 'durations.id')
                        ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                        ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')
                        ->where('countries.slug', $region_slug)->distinct()->select('tours.*')->get();
                    $query_region_select = $query_region_select->intersect($queryTemp);
                }
                $tours = $tours->intersect($query_region_select); 
                
            } 
            if($cat_select){
                $query_cat_select = Tours::query();
                $query_cat_select = $query_cat_select->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')->distinct()->select('tours.*')->get();
                foreach($cat_select as $keyCat => $cat_slug){
                    $queryTemp = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                        ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                        ->join('durations', 'tours.duration_id', '=', 'durations.id')
                        ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                        ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')
                        ->where('category_tours.slug', $cat_slug)->distinct()->select('tours.*')->get();
                    $query_cat_select = $query_cat_select->intersect($queryTemp);
                }
                $tours = $tours->intersect($query_cat_select); 
            }


        } 
        /*$test = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')->where('country_tours.country_id', 4)->distinct()->select('tours.*')->get();
        dd($test);*/

        $items = $tours instanceof Collection ? $tours : Collection::make($tours);
        $countryCat = CountryCategory::where('country_id', $country->id)->select('cat_id')->get();

        //set pagination
        $lap = new LengthAwarePaginator($items->forPage($page, $per_page), count($items), $per_page, $page); 
       
       /* $last_page_url = $lap->resolveCurrentPath() . '?page=' . $lap->lastPage();
        $first_page_url = $lap->resolveCurrentPath() . '?page=1';*/
        /*$paging = [
                'current_page' => $lap->currentPage(),
                'first_page_url' => $first_page_url,
                'from' => $lap->firstItem(),
                'last_page' => $lap->lastPage(),
                'last_page_url' => $last_page_url,
                'next_page_url' => $lap->nextPageUrl(),
                'per_page' => $lap->perPage(),
                'prev_page_url' => $lap->previousPageUrl(),
                'path' => $lap->resolveCurrentPath(),
                'to' => $lap->lastItem(),
                'total' => $lap->total(),
            ];*/ 
        $item = $items->toArray(); 

        //sidebar count region
        if($array_all_region){
            foreach($array_all_region as $key => $value){
                $query_region_select = Tours::query();
                $query_region_select = $query_region_select->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')->distinct()->select('tours.*')->get();
                
                if($region_select){
                    foreach($region_select as $region_slug){
                        $queryTemp = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')
                            ->where('countries.slug', $region_slug)->distinct()->select('tours.*')->get();
                        $query_region_select = $query_region_select->intersect($queryTemp);
                    }
                }  

                $query_region[$key] = $query_region[$key]->where('country_tours.country_id', $value->id)
                                                    ->select('tours.*')->distinct()->get()->intersect($query_region_select);
                //current country
                $query_region[$key] = $query_region[$key]->intersect(
                                            Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                                            ->where('country_tours.country_id', $country->id)
                                            ->distinct()->select('tours.*')
                                            ->get()
                                        );
                if($cat_select){
                    $query_cat_select = Tours::query();
                    $query_cat_select = $query_cat_select->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')->distinct()->select('tours.*')->get();
                    foreach($cat_select as $keyCat => $cat_slug){
                        $queryTemp = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')
                            ->where('category_tours.slug', $cat_slug)->distinct()->select('tours.*')->get();
                        $query_cat_select = $query_cat_select->intersect($queryTemp);
                    }
                    $query_region[$key] = $query_region[$key]->intersect($query_cat_select);
                }
                $count_region[$value->id] = count($query_region[$key]);
            }
        }

        //count tour for each duration
        if($array_all_duration){
            foreach($array_all_duration as $key => $value){
                $query_duration[$key] = $query_duration[$key]->where('tours.duration_id', $value->id)
                                                        ->select('tours.*')->distinct()->get();
                //current country
                $query_duration[$key] = $query_duration[$key]->intersect(
                                            Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                                            ->where('country_tours.country_id', $country->id)
                                            ->distinct()->select('tours.*')
                                            ->get()
                                        );
                //region                                          
                if($region_select){ 
                    $query_region_select = Tours::query();
                    $query_region_select = $query_region_select->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                                ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                                ->join('durations', 'tours.duration_id', '=', 'durations.id')
                                ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                                ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')->distinct()->select('tours.*')->get();
                    foreach($region_select as $region_slug){
                        $queryTemp = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')
                            ->where('countries.slug', $region_slug)->distinct()->select('tours.*')->get();
                        $query_region_select = $query_region_select->intersect($queryTemp);
                    }
                    $query_duration[$key] = $query_duration[$key]->intersect($query_region_select); 
                    
                }
                //cat
                if($cat_select){
                    $query_cat_select = Tours::query();
                    $query_cat_select = $query_cat_select->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')->distinct()->select('tours.*')->get();
                    foreach($cat_select as $keyCat => $cat_slug){
                        $queryTemp = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')
                            ->where('category_tours.slug', $cat_slug)->distinct()->select('tours.*')->get();
                        $query_cat_select = $query_cat_select->intersect($queryTemp);
                    }
                    $query_duration[$key] = $query_duration[$key]->intersect($query_cat_select);
                }

                $count_duration[$value->id] = count($query_duration[$key]);
            }
        }   

        //count tour for each cat
        if($array_all_cat){
            foreach($array_all_cat as $key => $value){ 
                /*$query_cat[$key] = $query_cat[$key]->where('category_tours.id', $value->id)
                                                 ->select('tours.*')->distinct()->get();*/
                $query_cat_select = Tours::query();
                $query_cat_select = $query_cat_select->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')->distinct()->select('tours.*')->get();
                if($cat_select){
                    foreach($cat_select as $keyCat => $cat_slug){
                        $queryTemp = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')
                            ->where('category_tours.slug', $cat_slug)->distinct()->select('tours.*')->get();
                        $query_cat_select = $query_cat_select->intersect($queryTemp);
                    }
                }
                $query_cat[$key] = $query_cat[$key]->where('category_tours.id', $value->id)
                                                    ->select('tours.*')->distinct()->get()->intersect($query_cat_select);

                //current country
                $query_cat[$key] = $query_cat[$key]->intersect(
                                            Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                                            ->where('country_tours.country_id', $country->id)
                                            ->distinct()->select('tours.*')
                                            ->get()
                                        );

                if($region_select){ 
                    $query_region_select = Tours::query();
                    $query_region_select = $query_region_select->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                                ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                                ->join('durations', 'tours.duration_id', '=', 'durations.id')
                                ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                                ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')->distinct()->select('tours.*')->get();
                    foreach($region_select as $region_slug){
                        $queryTemp = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')
                            ->where('countries.slug', $region_slug)->distinct()->select('tours.*')->get();
                        $query_region_select = $query_region_select->intersect($queryTemp);
                    }
                    $query_cat[$key] = $query_cat[$key]->intersect($query_region_select); 
                    
                }
                $count_cat[$value->id] = count($query_cat[$key]);
            }
        }
        //dd($lap);

        return view('tours.country_tour', ['country'=>$country, 'regions'=>$regions, 'tours'=> $lap->values(), 'countryCat'=>$countryCat, 'region_select'=>$region_select, 'duration_select'=>$duration, 'cat_select'=>$cat_select, 'paging' => $lap, 'all_tours'=>$tours, 'count_region'=>$count_region, 'count_duration'=>$count_duration, 'count_cat'=>$count_cat]);
    }

    //filter by country
    public function toursMultiParamByMulti($region, $duration, $cat, $per_page, $page){

        $region_select = $cat_select = array();

        //sb region
        $array_all_region =  Countries::where('parent_id', 0)->select('id')->get();
        $count_region = array();
        $query_region = array();

        //sb duration
        $array_all_duration = Duration::select('id')->get();
        $count_duration = array();
        $query_duration = array();

        //sb cat
        $array_all_cat = CategoryTour::select('id')->get(); 
        $count_cat = array();
        $query_cat = array();
        
        if($region != 'noindex') $region_select = explode('-and-', $region); //split string to array 
        if($cat != 'noindex') $cat_select = explode('-and-', $cat); //split string to array 
        if($per_page == 'noindex' || $per_page == '') $per_page = 8;
        if($page == 'noindex' || $page == '') $page = 1;

            $regions = Countries::where('parent_id', 0)->get(); 
            //$tours = Tours::whereRaw("find_in_set($country->id,country_id)")->paginate($per_page);
            $tours = Tours::query();

            foreach($array_all_region as $key => $value){ //query of list region
                $query_region[$key] = Tours::query(); 
            }
            foreach($array_all_duration as $key => $value){ //query of list duration
                $query_duration[$key] = Tours::query(); 
            }
            foreach($array_all_cat as $key => $value){ //query of list cat
                $query_cat[$key] = Tours::query(); 
            }

            $tours = $tours->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id');
            foreach($array_all_region as $key => $value){ //query of list region
                $query_region[$key] = $query_region[$key]->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id');
            }
            foreach($array_all_duration as $key => $value){ //query of list duration
                $query_duration[$key] = $query_duration[$key]->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id'); 
            }
            foreach($array_all_cat as $key => $value){ //query of list cat
                $query_cat[$key] = $query_cat[$key]->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id');
            }

            $arr_multiID = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                                ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                                ->whereIn('country_tours.country_id', function ($query) {
                                    $query->select('countries.id')
                                        ->from('countries')
                                        ->where('countries.parent_id', 0);
                                })
                                ->groupBy('country_tours.tour_id')
                                ->having(DB::raw("count(country_tours.tour_id)"), '>', 1)
                                ->distinct()->pluck('tours.id');
            $tours = $tours->whereIn('tours.id', $arr_multiID);
            
            foreach($array_all_region as $key => $value){ //query of list region
                $query_region[$key] = $query_region[$key]->whereIn('tours.id', $arr_multiID);
            }
            foreach($array_all_duration as $key => $value){ //query of list duration
                $query_duration[$key] = $query_duration[$key]->whereIn('tours.id', $arr_multiID);
            }
            foreach($array_all_cat as $key => $value){ //query of list cat
                $query_cat[$key] = $query_cat[$key]->whereIn('tours.id', $arr_multiID); 
            }

            //filter by duration slug
            if($duration != 'noindex'){
                $tours = $tours->where('durations.slug', $duration);
                foreach($array_all_region as $key => $value){ //query of list region
                    $query_region[$key] = $query_region[$key]->where('durations.slug', $duration);
                }
                foreach($array_all_duration as $key => $value){ //query of list duration
                    $query_duration[$key] = $query_duration[$key]->where('durations.slug', $duration);
                }
                foreach($array_all_cat as $key => $value){ //query of list cat
                    $query_cat[$key] = $query_cat[$key]->where('durations.slug', $duration);
                }
            }
       
            $tours = $tours->orderBy('tours.created_at', 'desc')->select('tours.*')->distinct()->get(); 
            //current country
            
            

            if($region_select){ 
                $query_region_select = Tours::query();
                $query_region_select = $query_region_select->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')->distinct()->select('tours.*')->get();
                foreach($region_select as $region_slug){
                    $queryTemp = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                        ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                        ->join('durations', 'tours.duration_id', '=', 'durations.id')
                        ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                        ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')
                        ->where('countries.slug', $region_slug)->distinct()->select('tours.*')->get();
                    $query_region_select = $query_region_select->intersect($queryTemp);
                }
                $tours = $tours->intersect($query_region_select); 
                
            } 
            if($cat_select){
                $query_cat_select = Tours::query();
                $query_cat_select = $query_cat_select->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')->distinct()->select('tours.*')->get();
                foreach($cat_select as $keyCat => $cat_slug){
                    $queryTemp = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                        ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                        ->join('durations', 'tours.duration_id', '=', 'durations.id')
                        ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                        ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')
                        ->where('category_tours.slug', $cat_slug)->distinct()->select('tours.*')->get();
                    $query_cat_select = $query_cat_select->intersect($queryTemp);
                }
                $tours = $tours->intersect($query_cat_select); 
            }


        
        /*$test = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')->where('country_tours.country_id', 4)->distinct()->select('tours.*')->get();
        dd($test);*/

        $items = $tours instanceof Collection ? $tours : Collection::make($tours);
        $countryCat = CountryCategory::select('cat_id')->get();

        //set pagination
        $lap = new LengthAwarePaginator($items->forPage($page, $per_page), count($items), $per_page, $page); 
       
       /* $last_page_url = $lap->resolveCurrentPath() . '?page=' . $lap->lastPage();
        $first_page_url = $lap->resolveCurrentPath() . '?page=1';*/
        /*$paging = [
                'current_page' => $lap->currentPage(),
                'first_page_url' => $first_page_url,
                'from' => $lap->firstItem(),
                'last_page' => $lap->lastPage(),
                'last_page_url' => $last_page_url,
                'next_page_url' => $lap->nextPageUrl(),
                'per_page' => $lap->perPage(),
                'prev_page_url' => $lap->previousPageUrl(),
                'path' => $lap->resolveCurrentPath(),
                'to' => $lap->lastItem(),
                'total' => $lap->total(),
            ];*/ 
        $item = $items->toArray(); 

        //sidebar count region
        if($array_all_region){
            foreach($array_all_region as $key => $value){
                $query_region_select = Tours::query();
                $query_region_select = $query_region_select->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')->distinct()->select('tours.*')->get();
                
                if($region_select){
                    foreach($region_select as $region_slug){
                        $queryTemp = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')
                            ->where('countries.slug', $region_slug)->distinct()->select('tours.*')->get();
                        $query_region_select = $query_region_select->intersect($queryTemp);
                    }
                }  

                $query_region[$key] = $query_region[$key]->where('country_tours.country_id', $value->id)
                                                    ->select('tours.*')->distinct()->get()->intersect($query_region_select);
                //current country
                $query_region[$key] = $query_region[$key]->intersect(
                                            Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                                            ->distinct()->select('tours.*')
                                            ->get()
                                        );
                if($cat_select){
                    $query_cat_select = Tours::query();
                    $query_cat_select = $query_cat_select->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')->distinct()->select('tours.*')->get();
                    foreach($cat_select as $keyCat => $cat_slug){
                        $queryTemp = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')
                            ->where('category_tours.slug', $cat_slug)->distinct()->select('tours.*')->get();
                        $query_cat_select = $query_cat_select->intersect($queryTemp);
                    }
                    $query_region[$key] = $query_region[$key]->intersect($query_cat_select);
                }
                $count_region[$value->id] = count($query_region[$key]);
            }
        }

        //count tour for each duration
        if($array_all_duration){
            foreach($array_all_duration as $key => $value){
                $query_duration[$key] = $query_duration[$key]->where('tours.duration_id', $value->id)
                                                        ->select('tours.*')->distinct()->get();
                //current country
                $query_duration[$key] = $query_duration[$key]->intersect(
                                            Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                                            ->distinct()->select('tours.*')
                                            ->get()
                                        );
                //region                                          
                if($region_select){ 
                    $query_region_select = Tours::query();
                    $query_region_select = $query_region_select->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                                ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                                ->join('durations', 'tours.duration_id', '=', 'durations.id')
                                ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                                ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')->distinct()->select('tours.*')->get();
                    foreach($region_select as $region_slug){
                        $queryTemp = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')
                            ->where('countries.slug', $region_slug)->distinct()->select('tours.*')->get();
                        $query_region_select = $query_region_select->intersect($queryTemp);
                    }
                    $query_duration[$key] = $query_duration[$key]->intersect($query_region_select); 
                    
                }
                //cat
                if($cat_select){
                    $query_cat_select = Tours::query();
                    $query_cat_select = $query_cat_select->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')->distinct()->select('tours.*')->get();
                    foreach($cat_select as $keyCat => $cat_slug){
                        $queryTemp = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')
                            ->where('category_tours.slug', $cat_slug)->distinct()->select('tours.*')->get();
                        $query_cat_select = $query_cat_select->intersect($queryTemp);
                    }
                    $query_duration[$key] = $query_duration[$key]->intersect($query_cat_select);
                }

                $count_duration[$value->id] = count($query_duration[$key]);
            }
        }   

        //count tour for each cat
        if($array_all_cat){
            foreach($array_all_cat as $key => $value){ 
                /*$query_cat[$key] = $query_cat[$key]->where('category_tours.id', $value->id)
                                                 ->select('tours.*')->distinct()->get();*/
                $query_cat_select = Tours::query();
                $query_cat_select = $query_cat_select->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')->distinct()->select('tours.*')->get();
                if($cat_select){
                    foreach($cat_select as $keyCat => $cat_slug){
                        $queryTemp = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')
                            ->where('category_tours.slug', $cat_slug)->distinct()->select('tours.*')->get();
                        $query_cat_select = $query_cat_select->intersect($queryTemp);
                    }
                }
                $query_cat[$key] = $query_cat[$key]->where('category_tours.id', $value->id)
                                                    ->select('tours.*')->distinct()->get()->intersect($query_cat_select);

                //current country
                $query_cat[$key] = $query_cat[$key]->intersect(
                                            Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                                            ->distinct()->select('tours.*')
                                            ->get()
                                        );

                if($region_select){ 
                    $query_region_select = Tours::query();
                    $query_region_select = $query_region_select->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                                ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                                ->join('durations', 'tours.duration_id', '=', 'durations.id')
                                ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                                ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')->distinct()->select('tours.*')->get();
                    foreach($region_select as $region_slug){
                        $queryTemp = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('durations', 'tours.duration_id', '=', 'durations.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')
                            ->where('countries.slug', $region_slug)->distinct()->select('tours.*')->get();
                        $query_region_select = $query_region_select->intersect($queryTemp);
                    }
                    $query_cat[$key] = $query_cat[$key]->intersect($query_region_select); 
                    
                }
                $count_cat[$value->id] = count($query_cat[$key]);
            }
        }

        return view('tours.multi_country_tour', ['regions'=>$regions, 'tours'=> $lap->values(), 'countryCat'=>$countryCat, 'region_select'=>$region_select, 'duration_select'=>$duration, 'cat_select'=>$cat_select, 'paging' => $lap, 'all_tours'=>$tours, 'count_region'=>$count_region, 'count_duration'=>$count_duration, 'count_cat'=>$count_cat]);
    }

    //filter tour
    public function filterTour(Request $request){
        if($request->ajax()){
            $html = '';
            $slug_country = '';
            $result = array();
            $array_region = json_decode($request->region);
            $duration = $request->duration;
            $array_cat = json_decode($request->cat);
            $page = 1;
            if($request->page) $page = $request->page;

            //sb region
            $array_all_region = json_decode($request->all_region);
            $count_region = array();
            $query_region = array();

            //sb duration
            $array_all_duration = json_decode($request->all_duration);
            $count_duration = array();
            $query_duration = array();

            //sb cat
            $array_all_cat = json_decode($request->all_cat);
            $count_cat = array();
            $query_cat = array();

            $per_page = 8;
            if($request->per_page && $request->per_page !='' && $request->per_page != NULL){
                $per_page = $request->per_page;
            }
            /*$skip = 0;
            if($request->skip && $request->skip !='' && $request->skip != NULL){
                $skip = intval(($request->page - 1))* $per_page;
            }*/

            $tours = Tours::query();

            foreach($array_all_region as $key => $value){ //query of list region
                $query_region[$key] = Tours::query(); 
            }
            foreach($array_all_duration as $key => $value){ //query of list duration
                $query_duration[$key] = Tours::query(); 
            }
            foreach($array_all_cat as $key => $value){ //query of list cat
                $query_cat[$key] = Tours::query(); 
            }
            $tours = $tours->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id')->select('tours.*');

            foreach($array_all_region as $key => $value){ //query of list region
                $query_region[$key] = $query_region[$key]->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id');
            }
            foreach($array_all_duration as $key => $value){ //query of list duration
                $query_duration[$key] = $query_duration[$key]->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id');
            }
            foreach($array_all_cat as $key => $value){ //query of list cat
                $query_cat[$key] = $query_cat[$key]->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                            ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                            ->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                            ->join('category_tours', 'cat_tour_metas.cat_id', '=', 'category_tours.id'); 
            }

            //current country tour (page)
            
            //filter region
            
            //filter duration
            if($duration && $duration!=''){ 
                $tours = $tours->where("duration_id", $duration);
                //country
                foreach($array_all_region as $key => $region_id){
                    $query_region[$key] = $query_region[$key]->where("tours.duration_id", $duration);
                }
                //duration
                foreach($array_all_duration as $key => $duration_id){
                    $query_duration[$key] =  $query_duration[$key]->where("tours.duration_id", $duration);
                }
                //cat
                foreach($array_all_cat as $key => $cat_id){
                    $query_cat[$key] = $query_cat[$key]->where("tours.duration_id", $duration);
                }
            }

            /*-- if multi country --*/
            if(isset($request->type_country) && $request->type_country == 'multi'){
               /* $queryTemp = collect(DB::select('SELECT  DISTINCT tours.* FROM tours JOIN  country_tours ON tours.id = country_tours.tour_id JOIN countries ON country_tours.country_id = countries.id WHERE country_tours.country_id IN ( SELECT countries.id FROM countries WHERE countries.parent_id = 0 ) GROUP BY country_tours.tour_id HAVING COUNT(country_tours.tour_id) > 1'));
                $items = $queryTemp instanceof Collection ? $queryTemp : Collection::make($queryTemp);
                $tours = $tours->intersect($queryTemp);*/
                $arr_multiID = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                                    ->join('countries', 'country_tours.country_id', '=', 'countries.id')
                                    ->whereIn('country_tours.country_id', function ($query) {
                                        $query->select('countries.id')
                                            ->from('countries')
                                            ->where('countries.parent_id', 0);
                                    })
                                    ->groupBy('country_tours.tour_id')
                                    ->having(DB::raw("count(country_tours.tour_id)"), '>', 1)
                                    ->distinct()->pluck('tours.id');
                $tours = $tours->whereIn('tours.id', $arr_multiID);
                
                foreach($array_all_region as $key => $value){ //query of list region
                    $query_region[$key] = $query_region[$key]->whereIn('tours.id', $arr_multiID);
                }
                foreach($array_all_duration as $key => $value){ //query of list duration
                    $query_duration[$key] = $query_duration[$key]->whereIn('tours.id', $arr_multiID);
                }
                foreach($array_all_cat as $key => $value){ //query of list cat
                    $query_cat[$key] = $query_cat[$key]->whereIn('tours.id', $arr_multiID); 
                }

                $slug_country = 'multi';
            }

            //$tours = $tours->orderBy('tours.created_at', 'desc')->distinct()->select('tours.*')->paginate($per_page);
            $tours = $tours->orderBy('tours.created_at', 'desc')->distinct()->get();
            foreach($array_all_region as $key => $region_id){
                $query_region[$key] = $query_region[$key]->distinct()->select('tours.*')->get();
                //current value
                $queryTemp = Tours::query();
                $queryTemp = $queryTemp->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                                        ->where('country_tours.country_id', $region_id)
                                        ->distinct()->select('tours.*')->get();
                $query_region[$key] = $query_region[$key]->intersect($queryTemp);
            }
            //duration
            foreach($array_all_duration as $key => $duration_id){
                $query_duration[$key] =  $query_duration[$key]->where('tours.duration_id', $duration_id)->distinct()->select('tours.*')->get();
            }
            //cat
            foreach($array_all_cat as $key => $cat_id){
                $query_cat[$key] = $query_cat[$key]->distinct()->select('tours.*')->get();
                //current value
                $queryTemp = Tours::query();
                $queryTemp = $queryTemp->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                                        ->where('cat_tour_metas.cat_id', $cat_id)
                                        ->distinct()->select('tours.*')->get();
                $query_cat[$key] = $query_cat[$key]->intersect($queryTemp);
            }

            /*-- filter params of countries (current country of page and region select to filter) --*/
            if($request->current_country != ''){ //current country
                $queryTemp = Tours::query();
                $queryTemp = $queryTemp->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                                        ->where('country_tours.country_id', $request->current_country)
                                        ->distinct()->select('tours.*')->get();
                $tours = $tours->intersect($queryTemp); //for tours
                if($array_all_region){ //for all region
                    foreach($array_all_region as $key => $region_id){
                        $query_region[$key] = $query_region[$key]->intersect($queryTemp);
                    }
                }
                if($array_all_duration){ //for all duration
                    foreach($array_all_duration as $key => $duration_id){
                        $query_duration[$key] = $query_duration[$key]->intersect($queryTemp);
                    }
                }
                if($array_all_cat){ //for all categories
                    foreach($array_all_cat as $key => $cat_id){
                        $query_cat[$key] = $query_cat[$key]->intersect($queryTemp);
                    }
                }

                //get item current country
                $country = getCountry($request->current_country);
                $slug_country = $country->slug;
            }
            

            if($array_region){ //array select countries
                $query_region_select = Tours::query();
                $query_region_select = $query_region_select->join('country_tours', 'tours.id', '=', 'country_tours.tour_id')->distinct()->select('tours.*')->get();
                foreach($array_region as $value){
                    $queryTemp = Tours::join('country_tours', 'tours.id', '=', 'country_tours.tour_id')
                        ->where('country_tours.country_id', $value)->distinct()->select('tours.*')->get();
                    $query_region_select = $query_region_select->intersect($queryTemp);
                }
                $tours = $tours->intersect($query_region_select); //for tours

                if($array_all_region){ //for all region
                    foreach($array_all_region as $key => $region_id){
                        $query_region[$key] = $query_region[$key]->intersect($query_region_select);
                    }
                }
                if($array_all_duration){ //for all duration
                    foreach($array_all_duration as $key => $duration_id){
                        $query_duration[$key] = $query_duration[$key]->intersect($query_region_select);
                    }
                }
                if($array_all_cat){ //for all categories
                    foreach($array_all_cat as $key => $cat_id){
                        $query_cat[$key] = $query_cat[$key]->intersect($query_region_select);
                    }
                }
            }
            /* end filter params of countries (current country of page and region select to filter) */

            /*-- filter params of categories (categories select to filter) --*/
            if($array_cat){ 
                $query_cat_select = Tours::query();
                $query_cat_select = $query_cat_select->join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')->distinct()->select('tours.*')->get();
                foreach($array_cat as $value){
                    $queryTemp = Tours::join('cat_tour_metas', 'tours.id', '=', 'cat_tour_metas.tour_id')
                        ->where('cat_tour_metas.cat_id', $value)->distinct()->select('tours.*')->get();
                    $query_cat_select = $query_cat_select->intersect($queryTemp);
                }

                $tours = $tours->intersect($query_cat_select); //for tours
                if($array_all_region){ //for all region
                    foreach($array_all_region as $key => $region_id){
                        $query_region[$key] = $query_region[$key]->intersect($query_cat_select);
                    }
                }
                if($array_all_duration){ //for all duration
                    foreach($array_all_duration as $key => $duration_id){
                        $query_duration[$key] = $query_duration[$key]->intersect($query_cat_select);
                    }
                }
                if($array_all_cat){ //for all categories
                    foreach($array_all_cat as $key => $cat_id){
                        $query_cat[$key] = $query_cat[$key]->intersect($query_cat_select);
                    }
                }
            }
            /*end filter params of categories*/

            if($array_all_region){ //count tour in list region
                foreach($array_all_region as $key => $value){
                    $count_region[$key]['id'] = $value;
                    $count_region[$key]['count'] = count($query_region[$key]);
                }
            }

            if($array_all_duration){
                foreach($array_all_duration as $key => $value){
                    $count_duration[$key]['id'] = $value;
                    $count_duration[$key]['count'] = count($query_duration[$key]);
                }
            }

            if($array_all_cat){
                foreach($array_all_cat as $key => $value){
                    $count_cat[$key]['id'] = $value;
                    $count_cat[$key]['count'] = count($query_cat[$key]);
                }
            }


            $items = $tours instanceof Collection ? $tours : Collection::make($tours);

            //set pagination
            $lap = new LengthAwarePaginator($items->forPage($page, $per_page), count($items), $per_page, $page); 

            //$paginate  = '';
            $paginate = getPaginate($lap); //get paginate of tours
            $html = getContentListTour($lap->values());

            if(count($tours) < $per_page) $paginate = 'empty';

            /*
            * slug in redirect URL
            */
            $slug_region = $slug_duration = $slug_cat = 'noindex';
            //region
            if($array_region){
                foreach($array_region as $key => $value){
                    $countryTemp = getCountryById($value);
                    if($key == 0) $slug_region = $countryTemp->slug;
                    else $slug_region .= '-and-' . $countryTemp->slug; 
                }
            }
            //duration
            if($duration){
                $slug_duration = getDurationById($duration)->slug;
            }
            //category tour
            if($array_cat){
                foreach($array_cat as $key => $value){
                    $catTemp = get_category_tour($value);
                    if($key == 0) $slug_cat = $catTemp->slug;
                    else $slug_cat .= '-and-' . $catTemp->slug; 
                }
            }
            $slug_page = $slug_per_page = 'noindex';

            if($request->per_page && $request->per_page != ''){
                $slug_per_page = $per_page;
            }
            if($request->page && $request->page != ''){
                $slug_page = $page;
                //$slug_per_page = $per_page;
            }

            $result['url'] = route('toursMultiParamByCountry', ['slug_country'=>$slug_country, 'region' => $slug_region, 'duration' => $slug_duration, 'cat' => $slug_cat, 'per_page' => $slug_per_page, 'page' => $slug_page]);
            if(isset($request->type_country) && $request->type_country == 'multi'){
                $result['url'] = route('toursMultiParamByMulti', ['region' => $slug_region, 'duration' => $slug_duration, 'cat' => $slug_cat, 'per_page' => $slug_per_page, 'page' => $slug_page]);
            }
            $result['content'] = $html;
            $result['paginate'] = $paginate;
            $result['total_result'] = count($tours);
            $result['count_region'] = json_encode($count_region);
            $result['count_duration'] = json_encode($count_duration);
            $result['count_cat'] = json_encode($count_cat);
            
            return json_encode($result);
        }
        return 'error';
    }

    /**
     * filter tour v.2
     */
    public function filterTour2(Request $request){
        if($request->ajax()){
            $request['type_query_country'] = 'and'; 
            if(isset($request->per_page) && isset($request->page))
                $list_tour = filterTour($request, $request->per_page, $request->page);
            else
                $list_tour = filterTour($request);
            $html = '';
            if(isset($request->type_result) && $request->type_result == 'slide'){
                foreach($list_tour as $tour){
                    $html .= view('tours.related_item', ['tour' => $tour])->render();
                }
            }else{
                $html .= view('tours.list-result', ['list_tour' => $list_tour])->render();
            }
            return response()->json(['msg' => 'success', 'html' => $html, 'total' => count($list_tour), 'request' => $request->duration_id]);
        }
        return 'error';
    }

    /**
     * filter tour v.2
     */
    public function filterTourAbout(Request $request){
        if($request->ajax()){
            $request['type_query_country'] = 'and'; 
            if(isset($request->per_page) && isset($request->page))
                $list_tour = filterTour($request, $request->per_page, $request->page);
            else
                $list_tour = filterTour($request);
            $html = '';
            if(isset($request->type_result) && $request->type_result == 'slide'){
                foreach($list_tour as $tour){
                    $html .= view('tours.related_item', ['tour' => $tour])->render();
                }
            }else{
                $html .= view('tours.list-result', ['list_tour' => $list_tour])->render();
            }
            return response()->json(['msg' => 'success', 'html' => $html, 'total' => count($list_tour), 'request' => $request->duration_id]);
        }
        return 'error';
    }

}