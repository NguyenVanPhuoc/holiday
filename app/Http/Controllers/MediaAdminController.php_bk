<?php
namespace App\Http\Controllers;
use Illuminate\Support\Facades\Auth;
use Illuminate\Http\Request;
use App\Http\Requests;
use App\MediaCat;
use App\Media;
use App\User;

class MediaAdminController extends Controller
{
  public function index(){
    $media = Media::orderBy('updated_at', 'desc')->paginate(14);
    return view('backend.media.list',['media'=>$media]);
  }

  public function store(){    	
    return view('backend.media.create');
  }
  public function create(Request $request){    	
    $file = $request->file('file');
    if($file){
      $file_name = $file->getClientOriginalName();
      $imageName = explode(".", $file_name);
      $file_url = str_slug(str_random(4)."_".$imageName[0]).".".$imageName[1];
      $file->move("public/uploads/",$file_url);
      $user = Auth::User();
      $media = new Media();
      $media->image_path = $file_url;
      if($imageName[1] == "pdf")
        $media->type = "pdf";
      else
        $media->type = "image";
      $media->title = $imageName[0];         
      if($request->category !="") $media->cat_ids = $request->category;
      $media->user_id = $user->id;
      $media->save();
    }
    return $request->category;
  }
  public function edit($id){
    $media = Media::find($id);
    $mediaCat = MediaCat::orderBy('position', 'desc')->paginate(14);
    return view('backend.media.edit',['media'=>$media, 'mediaCat'=>$mediaCat]);
  }
  public function update(Request $request, $id){
    $message = "error";
    if($request->ajax()):
      $categories = json_decode($request->categories);
      $media = Media::find($id);
      $media->cat_ids = implode(",",$categories);
      if($request->title!="") $media->title = $request->title;
      if($request->alt!="") $media->alt = $request->alt;
      $media->save();
      $message = "success";
    endif;
    return $message;
  }
  public function delete($id){
    $media = Media::find($id);
    $path = public_path() . '/uploads/' . $media->image_path; 
    if(file_exists($path)) {
      unlink($path);
      $media->delete();
      return redirect('/admin/media/')->with('success','Xóa thành công');
    }
    return 'error';
  }
  //delete one file with ajax
  public function deleteMediaSingle(Request $resquest){
    if($resquest->ajax()){
      $media = Media::find($resquest->id);
      $path = public_path() . '/uploads/' . $media->image_path; 
      if(file_exists($path)) {
        unlink($path);
        $media->delete();           
        return 'success';
      }
    }
    return 'error';
  }
  //deleteAll
  public function deleteAll(Request $resquest){
    $message = "error";
    if($resquest->ajax()){
      $items = json_decode($resquest->items);
      if(count($items)>0){
        foreach ($items as $item) {
          $media = Media::find($item);
          $path = public_path() . '/uploads/' . $media->image_path; 
          if(file_exists($path)) {
          unlink($path);
          $media->delete();
          }
        }            
      }
      $message = "success";
    }
    return $message;
  }
  //load media
  public function loadMedia(Request $resquest){
    $total = Media::count();
    $limit = 27;    
    $media = Media::limit($limit)->latest()->get();
    $message = 'error';
    if($media):
      $message = "success";
      $html = '';
      foreach ($media as $item):  
        if($item->type == 'pdf'){
          $path = asset('/public/admin/images/pdf_icon.png');
          $html .='<li id="image-'.$item->id.'"><div class="wrap"><img src="'.$path.'" alt="'.$item->image_path.'" data-date="'.$item->updated_at.'" data-image="'.$path.'" /></div></li>';
        }
        else{
          $path = url('/').'/image/'.$item->image_path.'/150/100';
          $html .='<li id="image-'.$item->id.'"><div class="wrap"><img src="'.$path.'" alt="'.$item->image_path.'" data-date="'.$item->updated_at.'" data-image="'.url('public/uploads').'/'.$item->image_path.'" /></div></li>';
        }
      endforeach;      
    endif;
    return response()->json(['message'=>'success','html'=>$html,'total'=>$total,'limit'=>$limit,'current'=>count($media)]);
  }  
  //load by cat
  public function loadMediaByCat(Request $resquest){
    $message = "error";
    if($resquest->ajax()){
      $limit = 27;      
      if($resquest->catId!="" && $resquest->s!=""):
        $total = Media::whereRaw("find_in_set($resquest->catId,cat_ids)")->where('title','like','%'.$resquest->s.'%')->count();      
        $media = Media::whereRaw("find_in_set($resquest->catId,cat_ids)")->where('title','like','%'.$resquest->s.'%')->offset(0)->limit($limit)->latest()->get();
      elseif($resquest->catId!=""):
        $total = Media::whereRaw("find_in_set($resquest->catId,cat_ids)")->count();      
        $media = Media::whereRaw("find_in_set($resquest->catId,cat_ids)")->offset(0)->limit($limit)->latest()->get();
      else:
        $total = Media::count();      
        $media = Media::limit($limit)->latest()->get();
      endif;
      if($media):
        $message = "success";
        $html = '';
        foreach ($media as $item):
        $path = url('/').'/image/'.$item->image_path.'/150/100';
        $html .='<li id="image-'.$item->id.'"><div class="wrap"><img src="'.$path.'" alt="'.$item->image_path.'" data-date="'.$item->updated_at.'" data-image="'.url('public/uploads').'/'.$item->image_path.'" /></div></li>';
        endforeach;        
      endif;
      return response()->json(['message'=>'success','html'=>$html,'total'=>$total,'limit'=>$limit,'current'=>count($media)]);
    }
    return $message;
  }
  //search media cat
  public function searchCatMedia(Request $resquest){
    $message = "error";
    if($resquest->ajax()){
      if($resquest->s!=""):
        $mediaCat = MediaCat::where('title','like','%'.$resquest->s.'%')->get();
      else:
        $mediaCat = MediaCat::get();
      endif;
      if($mediaCat):
        $message = "success";
        $html = '';
        foreach ($mediaCat as $item):
        $html .='<a hef="#'.$item->slug.'" data-value="'.$item->id.'">'.$item->title.'</a>';
        endforeach;        
      endif;
      return response()->json(['message'=>'success','html'=>$html]);
    }
    return $message;
  }
  //search key
  public function searchMedia(Request $resquest){
    $message = "error";
    if($resquest->ajax()){
      $limit = 27;
      if($resquest->catId!="" && $resquest->s!=""):
        $total = Media::whereRaw("find_in_set($resquest->catId,cat_ids)")->where('title','like','%'.$resquest->s.'%')->count();      
        $media = Media::whereRaw("find_in_set($resquest->catId,cat_ids)")->where('title','like','%'.$resquest->s.'%')->offset(0)->limit($limit)->latest()->get();
      elseif($resquest->catId!=""):
        $total = Media::whereRaw("find_in_set($resquest->catId,cat_ids)")->count();      
        $media = Media::whereRaw("find_in_set($resquest->catId,cat_ids)")->offset(0)->limit($limit)->latest()->get();
      else:
        $total = Media::count();      
        $media = Media::limit($limit)->latest()->get();
      endif;
      if($media):
        $message = "success";
        $html = '';
        foreach ($media as $item):
          if($item->type == 'pdf'){
            $path = asset('/public/admin/images/pdf_icon.png');
            $html .='<li id="image-'.$item->id.'"><div class="wrap"><img src="'.$path.'" alt="'.$item->image_path.'" data-date="'.$item->updated_at.'" data-image="'.$path.'" /></div></li>';
          }
          else{
            $path = url('/').'/image/'.$item->image_path.'/150/100';
            $html .='<li id="image-'.$item->id.'"><div class="wrap"><img src="'.$path.'" alt="'.$item->image_path.'" data-date="'.$item->updated_at.'" data-image="'.url('public/uploads').'/'.$item->image_path.'" /></div></li>';
          }
        endforeach;        
      endif;
      return response()->json(['message'=>'success','html'=>$html,'total'=>$total,'limit'=>$limit,'current'=>count($media)]);
    }
    return $message;
  }
  //load more media
  public function loadMorePage(Request $resquest){
    $s = $resquest->s;
    $catId = $resquest->catId;
    $current = $resquest->current;
    $limit = 27;
    $message = "error";      
    if($catId!="" && $s!=""){
      $total = $media = Media::whereRaw("find_in_set($resquest->catId,cat_ids)")->where('title','like','%'.$s.'%')->count();
      if($total > $current){                
        $media = Media::whereRaw("find_in_set($resquest->catId,cat_ids)")->where('title','like','%'.$s.'%')->offset($current)->limit($limit)->latest()->get();
        $current = $current + count($media);
        $html = '';
        foreach ($media as $item):
          $path = url('/').'/image/'.$item->image_path.'/150/100';
          $html .='<li id="image-'.$item->id.'"><div class="wrap"><img src="'.$path.'" alt="'.$item->image_path.'" data-date="'.$item->updated_at.'" data-image="'.url('public/uploads').'/'.$item->image_path.'" /></div></li>';
        endforeach;
        $message = "success";
      }
    }else if($catId!=""){
      $total = Media::whereRaw("find_in_set($resquest->catId,cat_ids)")->count();          
      if($total > $current){                
        $media = Media::whereRaw("find_in_set($resquest->catId,cat_ids)")->offset($current)->limit($limit)->latest()->get();
        $current = $current + count($media);
        $html = '';
        foreach ($media as $item):
          $path = url('/').'/image/'.$item->image_path.'/150/100';
          $html .='<li id="image-'.$item->id.'"><div class="wrap"><img src="'.$path.'" alt="'.$item->image_path.'" data-date="'.$item->updated_at.'" data-image="'.url('public/uploads').'/'.$item->image_path.'" /></div></li>';
        endforeach;
        $message = "success";
      }
    }else if($s!=""){
      $total = $media = Media::where('title','like','%'.$s.'%')->count();
      if($total > $current){        
        $media = Media::where('title','like','%'.$s.'%')->offset($current)->limit($limit)->latest()->get();
        $current = $current + count($media);
        $html = '';
        foreach ($media as $item):
          $path = url('/').'/image/'.$item->image_path.'/150/100';
          $html .='<li id="image-'.$item->id.'"><div class="wrap"><img src="'.$path.'" alt="'.$item->image_path.'" data-date="'.$item->updated_at.'" data-image="'.url('public/uploads').'/'.$item->image_path.'" /></div></li>';
        endforeach;
        $message = "success";
      }
    }else{
      $total = $media = Media::count();
      if($total > $current){        
        $media = Media::offset($current)->limit($limit)->latest()->get();  
        $current = $current + count($media);
        $html = '';
        foreach ($media as $item):
          $path = url('/').'/image/'.$item->image_path.'/150/100';
          $html .='<li id="image-'.$item->id.'"><div class="wrap"><img src="'.$path.'" alt="'.$item->image_path.'" data-date="'.$item->updated_at.'" data-image="'.url('public/uploads').'/'.$item->image_path.'" /></div></li>';
        endforeach;
        $message = "success";
      }  
    }
    return response()->json(['message'=>$message,'html'=>$html,'total'=>$total,'limit'=>$limit,'current'=>$current]);
  }
}